<launch>
  <!-- Parameters -->
  <arg name="mav_name" />
  <arg name="id"    default = "0"/>
  <arg name="config_path" default = "$(find coxgraph_sim)/config/vins/vins_sim_agent_$(arg id).yaml" />
  <arg name="vins_path"   default = "$(find feature_tracker)/../config/../" />

  <arg name="auto_toggle_mapping" default="true"/>
  <arg name="start_initializer" default="true"/>
  <arg name="enable_gazebo_tf" default="true"/>
  <arg name="odom_topic" default="/$(arg mav_name)_$(arg id)/repub/odometry" unless="$(arg enable_gazebo_tf)" />
  <arg name="odom_topic" default="/$(arg mav_name)_$(arg id)/ground_truth/odometry" if="$(arg enable_gazebo_tf)"/>

  <group ns="$(arg mav_name)_$(arg id)">
    <!-- Feature tracker -->
    <node name="feature_tracker_$(arg id)" pkg="feature_tracker" type="feature_tracker" output="log">
      <param name="config_file" type="string" value="$(arg config_path)" />
      <param name="vins_folder" type="string" value="$(arg vins_path)" />
    </node>

    <!-- Estimator -->
    <node name="vins_estimator_$(arg id)" pkg="vins_estimator" type="vins_estimator" output="log">
      <param name="config_file" type="string" value="$(arg config_path)" />
      <param name="vins_folder" type="string" value="$(arg vins_path)" />
      <param name="origin_frame_name" type="string" value="odom_$(arg id)" />
      <param name="camera_frame_name" type="string" value="cam_$(arg id)" />
      <param name="imu_frame_name" type="string" value="imu_$(arg id)" />

      <remap from="vins_estimator_$(arg id)/features" to="feature_tracker_$(arg id)/feature" />
      <remap from="vins_estimator_$(arg id)/feature_restart" to="feature_tracker_$(arg id)/restart" />

      <param if="$(arg auto_toggle_mapping)" name="toggle_mapping_srv_name" value="/coxgraph/tsdf_client_$(arg id)/toggle_mapping"/>
    </node>

    <!-- Pose Graph -->
    <node name="pose_graph_$(arg id)" pkg="pose_graph" type="pose_graph" output="screen">
      <remap from="~loop_closure_out" to="/coxgraph/coxgraph_client_$(arg id)/loop_closure_in"/>
      <param name="config_file" type="string" value="$(arg config_path)" />
      <param name="visualization_shift_x" type="int" value="0" />
      <param name="visualization_shift_y" type="int" value="0" />
      <param name="skip_cnt" type="int" value="0" />
      <param name="skip_dis" type="double" value="0" />
      <param name="num_odom_connections" type="int" value="2"/>
      <param name="agent_id" value="$(arg id)"/>

      <remap from="pose_graph_$(arg id)/keyframe_pose" to="vins_estimator_$(arg id)/keyframe_pose" />
      <remap from="pose_graph_$(arg id)/keyframe_point" to="vins_estimator_$(arg id)/keyframe_point" />
    </node>

    <!-- MSF -->
    <node name="pose_sensor_vins_$(arg id)" pkg="msf_updates" type="pose_sensor" respawn="true" clear_params="true" output="screen">
      <remap from="msf_updates/transform_input" to="vins_estimator_$(arg id)/transform" />
      <remap from="msf_core/imu_state_input" to="raw_imu" />
      <rosparam file="$(find multi_robot_simulation)/cfg/msf/$(arg mav_name)_msf.yaml"/>

      <param name="core/msf_output_frame" value="odom_$(arg id)"/>
      <param name="core/msf_state_frame" value="state_$(arg id)"/>
    </node>

    <!-- Node to process and communicate GPS measurements -->
    <node name="gps_interceptor_node" pkg="multi_robot_simulation" type="gps_interceptor_node" respawn="true" clear_params="true" output="screen" args="$(arg id)">
      <remap from="gps" to="fix"/>
    </node>

  </group>

  <!-- Node that performs the movements to initialize VINS-Mono -->
  <node if="$(arg start_initializer)" name="vins_initializer_node_$(arg id)" pkg="multi_robot_simulation" type="vins_initializer_node" output="screen" args="$(arg id)">
    <param name="n_sec_wait" value="5.0"/>
    <param name="hovering_height" value="2"/>
    <param name="delta_d" value="1.0"/>
    <param name="delta_h" value="0.6"/>
    <param name="delta_yaw" value="10.0"/>
    <param name="v_max" value="1.0"/>
    <param name="a_max" value="1.0"/>
    <param name="v_max_yaw" value="1.0"/>
    <param name="a_max_yaw" value="1.0"/>
    <param name="sampling_dt" value="0.10"/>

    <remap from="odometry_$(arg id)" to="$(arg odom_topic)"/>
    <remap from="command/trajectory" to="/$(arg mav_name)_$(arg id)/command/trajectory"/>
  </node>

</launch>
